{"version":3,"sources":["validators/validators.js","components/CusotomSelect/index.js","components/CusotomSelect/CustomSelect.jsx","components/RegForm/index.jsx","components/RegForm/RegForm.jsx","App.js","index.js"],"names":["requiredField","value","validPhonePattern","test","validEmail","validPhoneLength","length","validName","CustomSelect","optionsList","useState","choiceText","setChoiceText","showOptionList","setShowOptionList","useEffect","document","addEventListener","handleClickOutside","removeEventListener","e","target","classList","contains","handleOptionClick","getAttribute","className","onClick","tabIndex","map","option","data-name","name","id","Form","composeValidators","validators","reduce","error","validator","undefined","languageList","href","onSubmit","values","console","log","render","handleSubmit","errors","validate","type","input","meta","htmlFor","placeholder","touched","parse","formatString","disabled","JSON","stringify","App","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.de3868df.chunk.js","sourcesContent":["export const requiredField = (value) => {\n  if (value) return undefined;\n  return 'Поле обязательно к заполнению';\n};\n\nexport const validPhonePattern = (value) => {\n  if (/[+]{1}[0-9]\\s\\([0-9]{3}\\)\\s[0-9]{2}\\s[0-9]{2}\\s[0-9]{3}/.test(value))\n    return undefined;\n  return 'Номер телефона может состоять только из цифр';\n};\n\nexport const validEmail = (value) => {\n  if (\n    /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)/.test(\n      value\n    )\n  )\n    return undefined;\n  return 'Введите корректный email';\n};\n\nexport const validPhoneLength = (value) => {\n  if (value.length === 18) return undefined;\n  return 'Введите 11 цифр';\n};\n\nexport const validName = (value) => {\n  if (/^(?![ .]+$)[a-zA-Zа-яА-Я .]*$/.test(value)) return undefined;\n  return 'Некорректное имя';\n};\n","import CustomSelect from './CustomSelect';\r\n\r\nexport default CustomSelect;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst CustomSelect = ({ optionsList }) => {\r\n  const [choiceText, setChoiceText] = useState('');\r\n  const [showOptionList, setShowOptionList] = useState(false);\r\n\r\n  const defaultText = 'Язык';\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n\r\n    return document.removeEventListener('mousedown', handleClickOutside);\r\n  });\r\n\r\n  const handleClickOutside = (e) => {\r\n    if (\r\n      !e.target.classList.contains('custom-select-option') &&\r\n      !e.target.classList.contains('selected-text')\r\n    ) {\r\n      setShowOptionList(false);\r\n    }\r\n  };\r\n\r\n  const handleListDisplay = () => setShowOptionList(!showOptionList);\r\n\r\n  const handleOptionClick = (e) => {\r\n    setChoiceText(e.target.getAttribute('data-name'));\r\n    setShowOptionList(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"custom-select\">\r\n      <div\r\n        className={\r\n          showOptionList\r\n            ? 'custom-select__title-wrapper active'\r\n            : 'custom-select__title-wrapper'\r\n        }\r\n        onClick={handleListDisplay}\r\n        tabIndex=\"0\"\r\n      >\r\n        {choiceText ? (\r\n          <span className=\"custom-select__title custom-select__title--black\">\r\n            {choiceText}\r\n          </span>\r\n        ) : (\r\n          <span className=\"custom-select__title custom-select__title--grey\">\r\n            {defaultText}\r\n          </span>\r\n        )}\r\n      </div>\r\n      {showOptionList && (\r\n        <ul className=\"custom-select__list\">\r\n          {optionsList.map((option) => {\r\n            return (\r\n              <li\r\n                className=\"custom-select__item\"\r\n                data-name={option.name}\r\n                key={option.id}\r\n                onClick={handleOptionClick}\r\n              >\r\n                {option.name}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomSelect;\r\n","import Form from './RegForm';\nexport default Form;\n","import React from 'react';\nimport { Form, Field } from 'react-final-form';\nimport formatString from 'format-string-by-pattern';\nimport {\n  validName,\n  requiredField,\n  validPhonePattern,\n  validEmail,\n  validPhoneLength,\n} from '../../validators/validators';\nimport CustomSelect from '../CusotomSelect';\n\nconst RegForm = () => {\n  const onSubmit = (values) => {\n    console.log('Submit success');\n  };\n  const composeValidators = (...validators) => (value) =>\n    validators.reduce(\n      (error, validator) => error || validator(value),\n      undefined\n    );\n\n  const languageList = [\n    { id: 1, name: 'Русский' },\n    { id: 2, name: 'Английский' },\n    { id: 3, name: 'Китайский' },\n    { id: 4, name: 'Испанский' },\n  ];\n  return (\n    <>\n      <div className=\"wrapper\">\n        <div className=\"form-header\">\n          <h1 className=\"form-header__title\">Регистрация</h1>\n          <p className=\"form-header__desc\">\n            Уже есть аккаунт?\n            <a className=\"form-header__login\" href=\"#\">\n              Войти\n            </a>\n          </p>\n        </div>\n        <Form\n          onSubmit={onSubmit}\n          render={({ handleSubmit, values, errors }) => (\n            <form className=\"form\" onSubmit={handleSubmit}>\n              <div className=\"form__field-wrapper\">\n                <Field\n                  name=\"fullName\"\n                  validate={composeValidators(requiredField, validName)}\n                  type=\"text\"\n                >\n                  {({ input, meta }) => (\n                    <>\n                      <label htmlFor=\"fullName\">\n                        <div className=\"form__field-title\">\n                          <span className=\"form__field-title\">Имя</span>\n                        </div>\n                        <input\n                          id=\"fullName\"\n                          className=\"form__field\"\n                          {...input}\n                          placeholder=\"Введите Ваше имя\"\n                        ></input>\n                      </label>\n                      {meta.touched && meta.error && (\n                        <span className=\"form__field-error\">{meta.error}</span>\n                      )}\n                    </>\n                  )}\n                </Field>\n              </div>\n              <div className=\"form__field-wrapper\">\n                <Field\n                  name=\"email\"\n                  validate={composeValidators(requiredField, validEmail)}\n                  type=\"email\"\n                >\n                  {({ input, meta }) => (\n                    <>\n                      <label htmlFor=\"email\">\n                        <div className=\"form__field-title\">\n                          <span className=\"form__field-title\">Email</span>\n                        </div>\n                        <input\n                          id=\"email\"\n                          className=\"form__field\"\n                          {...input}\n                          placeholder=\"Введите ваш email\"\n                        ></input>\n                      </label>\n                      {meta.touched && meta.error && (\n                        <span className=\"form__field-error\">{meta.error}</span>\n                      )}\n                    </>\n                  )}\n                </Field>\n              </div>\n              <div className=\"form__field-wrapper\">\n                <Field\n                  name=\"phone\"\n                  parse={formatString('+7 (999) 99 99 999')}\n                  validate={composeValidators(\n                    requiredField,\n                    validPhoneLength,\n                    validPhonePattern\n                  )}\n                  type=\"tel\"\n                >\n                  {({ input, meta }) => (\n                    <>\n                      <label htmlFor=\"phone\">\n                        <div className=\"form__field-title\">\n                          <span className=\"form__field-title\">\n                            Номер телефона\n                          </span>\n                        </div>\n                        <input\n                          id=\"phone\"\n                          className=\"form__field\"\n                          {...input}\n                          placeholder=\"Введите номер телефона\"\n                        ></input>\n                      </label>\n                      {meta.touched && meta.error && (\n                        <span className=\"form__field-error\">{meta.error}</span>\n                      )}\n                    </>\n                  )}\n                </Field>\n              </div>\n              <div className=\"form__field-wrapper\">\n                <Field name=\"language\">\n                  {() => (\n                    <>\n                      <div className=\"form__field-title\">\n                        <span className=\"form__field-title\">Язык</span>\n                      </div>\n                      <CustomSelect optionsList={languageList} />\n                    </>\n                  )}\n                </Field>\n              </div>\n              <div className=\"form__field-wrapper form__field-wrapper--last\">\n                <Field name=\"agree\" type=\"checkbox\">\n                  {({ input }) => (\n                    <>\n                      <input\n                        className=\"visually-hidden form__checkbox\"\n                        {...input}\n                        placeholder=\"Язык\"\n                        id=\"agree\"\n                      ></input>\n                      <label className=\"form__label\" htmlFor=\"agree\">\n                        Принимаю <a href=\"#\">условия</a> использования\n                      </label>\n                    </>\n                  )}\n                </Field>\n              </div>\n              <div className=\"form__button-wrapper\">\n                <button\n                  className=\"form__button\"\n                  type=\"submit\"\n                  disabled={JSON.stringify(errors).length > 2}\n                >\n                  Зарегистрироваться\n                </button>\n              </div>\n            </form>\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default RegForm;\n","import React from 'react';\nimport RegForm from './components/RegForm';\nimport './styles/form.scss';\nimport './styles/form-header.scss';\nimport './styles/scaffolding.scss';\nimport './styles/custom-select.scss';\nimport './styles/wrapper.scss';\n\nfunction App() {\n  return <RegForm />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  // eslint-disable-next-line no-undef\n  document.getElementById('root')\n);\n"],"sourceRoot":""}